Python 转义字符：
    在需要在字符中使用特殊字符时，python 用反斜杠 \ 转义字符。如下表：
    转义字符	描述
    \(在行尾时)	续行符
    \\	反斜杠符号
    \'	单引号
    \"	双引号
    \a	响铃
    \b	退格(Backspace)
    \e	转义
    \000	空
    \n	换行
    \v	纵向制表符
    \t	横向制表符
    \r	回车
    \f	换页
    \oyy	八进制数，y 代表 0~7 的字符，例如：\012 代表换行。
    \xyy	十六进制数，以 \x 开头，yy代表的字符，例如：\x0a代表换行
    \other	其它的字符以普通格式输出

---

Python字符串运算符:
    r/R	原始字符串 - 原始字符串：所有的字符串都是直接按照字面的意思来使用，没有转义特殊或不能打印的字符。 原始字符串除在字符串的第一个引号前加上字母"r"（可以大小写）以外，与普通字符串有着几乎完全相同的语法。	
        >>>print r'\n'
        \n
        >>> print R'\n'
        \n
    %	格式字符串	请看下一章节

---

Python 字符串格式化:
print("good %s %d" %('job', 22))

      %c	 格式化字符及其ASCII码
      %s	 格式化字符串
      %d	 格式化整数
      %u	 格式化无符号整型
      %o	 格式化无符号八进制数
      %x	 格式化无符号十六进制数
      %X	 格式化无符号十六进制数（大写）
      %f	 格式化浮点数字，可指定小数点后的精度
      %e	 用科学计数法格式化浮点数
      %E	 作用同%e，用科学计数法格式化浮点数
      %g	 %f和%e的简写
      %G	 %F 和 %E 的简写
      %p	 用十六进制数格式化变量的地址

        *	定义宽度或者小数点精度
        -	用做左对齐
        +	在正数前面显示加号( + )
        <sp>	在正数前面显示空格
        #	在八进制数前面显示零('0')，在十六进制前面显示'0x'或者'0X'(取决于用的是'x'还是'X')
        0	显示的数字前面填充'0'而不是默认的空格
        %	'%%'输出一个单一的'%'
        (var)	映射变量(字典参数)
        m.n.	m 是显示的最小总宽度,n 是小数点后的位数(如果可用的话)

---

Unicode 字符串:
>>> u'Hello\u0020World !'
u'Hello World !'
